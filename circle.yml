machine:
  environment:
    PATH: $PATH:$HOME/terraform:$HOME/packer:$HOME/glide/linux-amd64

dependencies:
  override:
    # Install the gruntwork-module-circleci-helpers and use it to configure the build environment and run tests.
    - curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/master/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version v0.0.16
    - gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.3.15"
    - gruntwork-install --module-name "build-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.3.15"
    - gruntwork-install --module-name "aws-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.3.15"
    - configure-environment-for-gruntwork-module --go-src-path test

  cache_directories:
    - ~/terraform
    - ~/packer
    - ~/glide

test:
  override:
    # To create AMIs for the first time in a new AWS account, run the CircleCI tests in the init-ami branch. This will
    # bypass tests but still run the AMI.
    - if [[ $CIRCLE_BRANCH != "publish-amis" ]]; then run-go-tests --path test; fi

deployment:
  release:
    tag: /v.*/
    commands:
      # If a new release is tagged in GitHub, build the AMIs and publish them to all regions.
      - ~/$CIRCLE_PROJECT_REPONAME/_ci/publish-amis.sh "ubuntu16-ami"
      - ~/$CIRCLE_PROJECT_REPONAME/_ci/publish-amis.sh "amazon-linux-ami"

    branch: publish-amis
    commands:
      # If we are in a branch called publish-amis, build the AMIs on each commit.
      - ~/$CIRCLE_PROJECT_REPONAME/_ci/publish-amis.sh "ubuntu16-ami"
      - ~/$CIRCLE_PROJECT_REPONAME/_ci/publish-amis.sh "amazon-linux-ami"